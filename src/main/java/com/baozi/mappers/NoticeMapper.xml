<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baozi.mappers.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.baozi.po.Notice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="publicTime" property="publictime" jdbcType="TIMESTAMP" />
    <result column="lastModifyTime" property="lastmodifytime" jdbcType="TIMESTAMP" />
    <result column="display" property="display" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.baozi.po.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, createTime, category, status, publicTime, lastModifyTime, display, img
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.baozi.po.NoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.baozi.po.NoticeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.baozi.po.NoticeExample" >
    delete from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.baozi.po.Notice" >
    insert into notice (id, title, createTime, 
      category, `status`, publicTime,
      lastModifyTime, display, img, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{category,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{publictime,jdbcType=TIMESTAMP}, 
      #{lastmodifytime,jdbcType=TIMESTAMP}, #{display,jdbcType=INTEGER}, #{img,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.baozi.po.Notice" >
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="publictime != null" >
        publicTime,
      </if>
      <if test="lastmodifytime != null" >
        lastModifyTime,
      </if>
      <if test="display != null" >
        display,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="publictime != null" >
        #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifytime != null" >
        #{lastmodifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="display != null" >
        #{display,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.baozi.po.NoticeExample" resultType="java.lang.Integer" >
    select count(*) from notice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notice
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.publictime != null" >
        publicTime = #{record.publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastmodifytime != null" >
        lastModifyTime = #{record.lastmodifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.display != null" >
        display = #{record.display,jdbcType=INTEGER},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=INTEGER},
    `status` = #{record.status,jdbcType=INTEGER},
      publicTime = #{record.publictime,jdbcType=TIMESTAMP},
      lastModifyTime = #{record.lastmodifytime,jdbcType=TIMESTAMP},
      display = #{record.display,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=INTEGER},
    `status` = #{record.status,jdbcType=INTEGER},
      publicTime = #{record.publictime,jdbcType=TIMESTAMP},
      lastModifyTime = #{record.lastmodifytime,jdbcType=TIMESTAMP},
      display = #{record.display,jdbcType=INTEGER},
      img = #{record.img,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.baozi.po.Notice" >
    update notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="publictime != null" >
        publicTime = #{publictime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastmodifytime != null" >
        lastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="display != null" >
        display = #{display,jdbcType=INTEGER},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.baozi.po.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      publicTime = #{publictime,jdbcType=TIMESTAMP},
      lastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      display = #{display,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baozi.po.Notice" >
    update notice
    set title = #{title,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      publicTime = #{publictime,jdbcType=TIMESTAMP},
      lastModifyTime = #{lastmodifytime,jdbcType=TIMESTAMP},
      display = #{display,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findNoticePage" resultType="com.baozi.vo.NoticeVo" parameterType="map">
    select * from notice i
    <where>
      i.display=1
      <if test="title!=null and title!='' ">
        and i.title like CONCAT('%', #{title}, '%')
      </if>
      <if test="category!=null and category!=-1 ">
        and i.category = #{category}
      </if>
      <if test="starttime!=null and starttime!='' ">
        <![CDATA[ and i.publicTime >= #{starttime} ]]>
      </if>
      <if test="endtime!=null and endtime!='' ">
        <![CDATA[ and i.publicTime <= #{endtime} ]]>
      </if>
    </where>
    order by i.status,i.lastModifyTime desc
  </select>

  <delete id="deleteNoticeSingleOrBatch" parameterType="java.util.List">
    update notice set display = 0
    where id in
    <foreach item="id" collection="list" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>

  <select id="footerPagination" resultType="com.baozi.vo.NoticeViewVo" parameterType="map">
    select * from notice i where i.display=1 and `status`=1
    order by i.publicTime desc
  </select>
</mapper>