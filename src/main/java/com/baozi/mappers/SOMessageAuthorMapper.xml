<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baozi.mappers.SOMessageAuthorMapper" >
  <resultMap id="BaseResultMap" type="com.baozi.po.SOMessageAuthor" >
    <id column="id" property="id"  jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="open_type" property="openType" jdbcType="INTEGER" />
    <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sucurity" property="sucurity" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, open_type, avatar_url, url, nickname,create_time,email,sucurity
  </sql>
  
  <!-- 查询所有 -->
  <select id="findAll" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from so_message_author
  </select>
  
  <!-- 根据nickname来查询，用来确认评论是否存在（下策），因为我要重新把ID编号 -->
  <select id="selectByNickname" resultType="java.lang.Long">
  	  select id from  so_message_author where nickname = #{nickname,jdbcType=VARCHAR}
  </select>

  <!-- 根据第三方ID（openid）来查询 -->
  <select id="findByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from  so_message_author where open_id = #{openId,jdbcType=VARCHAR}
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from so_message_author
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from so_message_author
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.baozi.po.SOMessageAuthor" >
    insert into so_message_author (id, open_id, open_type, 
      avatar_url, url, nickname,create_time,email,sucurity
      )
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=VARCHAR}, #{openType,jdbcType=INTEGER}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}
    , #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, #{sucurity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.baozi.po.SOMessageAuthor" >
    insert into so_message_author
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="openType != null" >
        open_type,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sucurity != null" >
        sucurity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="openType != null" >
        #{openType,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sucurity != null" >
        #{sucurity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.baozi.po.SOMessageAuthor" >
    update so_message_author
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="openType != null" >
        open_type = #{openType,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time =  #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email =  #{email,jdbcType=VARCHAR},
      </if>
      <if test="sucurity != null" >
        sucurity = #{sucurity,jdbcType=VARCHAR},
      </if>
    </set>



    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.baozi.po.SOMessageAuthor" >
    update so_message_author
    set open_id = #{openId,jdbcType=VARCHAR},
      open_type = #{openType,jdbcType=INTEGER},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      create_time =  #{createTime,jdbcType=TIMESTAMP},
      email =  #{email,jdbcType=VARCHAR},
      sucurity = #{sucurity,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>